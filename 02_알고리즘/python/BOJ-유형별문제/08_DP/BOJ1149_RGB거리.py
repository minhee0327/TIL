N = int(input())
RGB = [list(map(int, input().split())) for _ in range(N)]

for i in range(1, N):
    RGB[i][0] = min(RGB[i-1][1], RGB[i-1][2]) + RGB[i][0]
    RGB[i][1] = min(RGB[i-1][0], RGB[i-1][2]) + RGB[i][1]
    RGB[i][2] = min(RGB[i-1][0], RGB[i-1][1]) + RGB[i][2]

# print(RGB)
print(min(RGB[N-1]))


'''
[입력 & 출력]
- 집의수:N(2 ≤ N ≤ 1,000)
- 각집을 RGB로 칠하는 비용이 1번집부터 한줄에 하나씩 N개 주어짐
- 모든 집을 칠하는 비용의 최소값?

[조건(규칙)]
- 1번 집의 색은 2번집의 색과 같지 않아야함
- N번집의 색은 N-1의 색과 같지 않아야함
- i(2 ≤ i ≤ N-1)번 집의 색은 i-1번, i+1번 집의 색과 같지 않아야 함.

[풀이]
- 3개의 색(R,G,B)를 사용하되, 앞의 집 색과는 달라야한다.
- 그럼 i의 집의 R를 칠하면 가능한 색은 G,B밖에 안된다. 그 G, B중 작은 값과 합친값으로 업데이트 해나간다.
- 그렇게 하다보면 맨 마지막 배열에 앞집과 겹치지 않으면서 최소값으로 가능한 값들만 저장한 결과들이다.
- 마지막 배열 중에서 또 최소값이 규칙을 만족하면서 최소의 값인 경우이다! 
'''
